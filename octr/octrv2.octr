177 105 114 106 ; ELF Signature
001 ; ELF-32
001 ; little endian
001 ; current ELF version
000 ; System-V ABI
000 ; ABI Version
000 000 000 000 000 000 000 ; padding
002 000 ; executable object file
003 000 ; i386
001 000 000 000 ; original file version
124 000 000 010 ; entry point
064 000 000 000 ; start of segment headers
000 000 000 000 ; start of section headers
000 000 000 000 ; flags
064 000 ; size of this header
040 000 ; size of segment header
001 000 ; number of segment headers
050 000 ; size of section header
000 000 ; number of section headers
000 000 ; string table index

; .text segment header
001 000 000 000 ; loadable segment
124 000 000 000 ; offset in file
124 000 000 010 ; virtual address
000 000 000 000 ; physical address
053 001 000 000 ; size on disk
053 001 000 000 ; size in memory
005 000 000 000 ; R+X permissions
001 000 000 000 ; alignment

; .text = 001 000 000 124
; _start
213 354 ; mov ebp, esp
201 355 020 001 000 000 ; sub esp, 0x110

063 333 ; xor ebx, ebx
211 135 374 ; mov dword [ebp - 0x4], ebx
211 135 370 ; mov dword [ebp - 0x8], ebx
211 235 364 376 377 377 ; mov dword [ebp - 0x10C], ebx
211 235 360 376 377 377 ; mov dword [ebp - 0x110], ebx

270 132 000 000 000 ; mov eax, 0x5A
201 354 030 000 000 000 ; sub esp, 0x18
211 034 044 ; mov dword [esp], ebx
307 104 044 004 000 020 000 000 ; mov dword [esp + 0x4], 0x1000
307 104 044 010 003 000 000 000 ; mov dword [esp + 0x8], 0x3 ; PROT_READ(0x1) | PROT_WRITE(0x2)
307 104 044 014 042 000 000 000 ; mov dword [esp + 0xC], 0x22 ; MAP_PRIVATE(0x2) | MAP_ANONYMOUS(0x20)
307 104 044 020 377 377 377 377 ; mov dword [esp + 0x10], -1
211 134 044 024 ; mov dword [esp + 0x14], ebx
213 334 ; mov ebx, esp
315 200 ; int 0x80 ; syscall(null, 0x1000, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS)
211 105 374 ; mov dword [ebp - 4], eax
201 304 030 000 000 000 ; add esp, 0x18
213 335 ; mov ebx, ebp

; .readBegin:
350 117 000 000 000 ; call readByte
205 300 ; test eax, eax
164 075 ; jz .epilogue

074 060 ; cmp eax, '0'
174 363 ; jl .readBegin

074 073 ; cmp eax, ';'
165 016 ; jne .readOctalDigits

; .readComment:
350 076 000 000 000 ; call readByte
074 012 ; cmp eax, '\n'
165 367 ; jnz .readComment
351 341 377 377 377 ; jmp .readBegin


061 377 ; xor edi, edi

; .readOctalDigits:
301 347 003 ; shl edi, 3
044 017 ; and al, 0xF
003 370 ; add edi, eax
350 047 000 000 000 ; call readByte

074 060 ; cmp al, '0'
017 235 301 ; setge cl
074 067 ; cmp al, '7'
017 236 302 ; setle dl
042 312 ; and cl, dl
165 346 ; jnz .readOctalDigits

127 ; push edi
350 127 000 000 000 ; call writeByte
351 272 377 377 377 ; jmp .readBegin

350 151 000 000 000 ; call dumpOutput
270 001 000 000 000 ; mov eax, 1
063 333 ; xor ebx, ebx
315 200 ; int 0x80 ; exit(0)

; readByte
215 263 370 376 377 377 ; lea esi, [ebx - 0x108]
213 213 364 376 377 377 ; mov ecx, [ebx - 0x10C]
213 223 360 376 377 377 ; mov edx, [ebx - 0x110]
073 312 ; cmp ecx, edx
174 043 ; jl .readByte
306 006 000 ; mov dword [esi], 0
123 ; push ebx
270 003 000 000 000 ; mov eax, 3
213 316 ; mov ecx, esi
063 333 ; xor ebx, ebx
272 000 001 000 000 ; mov edx, 0x100
315 200 ; int 0x80 ; read(stdin, input, 0x100)
133 ; pop ebx
211 203 360 376 377 377 ; mov dword [ebx - 0x110], eax
063 311 ; xor ecx, ecx
211 213 364 376 377 377 ; mov dword [ebx - 0x10C], ecx
; .readByte
017 266 004 016 ; movzx eax, byte [esi + ecx]
377 203 364 376 377 377 ; inc dword [ebx - 0x10C]
303 ; ret

; writeByte
213 273 374 377 377 377 ; mov edi, dword [ebx - 0x4]
213 213 370 377 377 377 ; mov ecx, dword [ebx - 0x8]
213 104 044 004 ; mov eax, [esp + 0x4]
210 004 017 ; mov byte [edi + ecx], al
377 203 370 377 377 377 ; inc dword [ebx - 0x8]
302 004 000 ; ret 4

; dumpOutput
123 ; push ebx
270 004 000 000 000 ; mov eax, 0x4
213 213 374 377 377 377 ; mov ecx, dword [ebx - 0x4]
213 223 370 377 377 377 ; mov edx, dword [ebx - 0x8]
273 001 000 000 000 ; mov ebx, 1
315 200 ; int 0x80 ; write(stdout, output, outputLength)
133 ; pop ebx
303 ; ret
